# https://github.com/durs/node-activex/blob/d7a13a0b030af1783779be3b39f4672d1f26569c/.github/workflows/ci.yml#L23
# https://docs.github.com/en/actions/use-cases-and-examples/building-and-testing/building-and-testing-nodejs

name: ci
on:
  - push
  - pull_request
  - workflow_dispatch
permissions:
  contents: write
jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        node-version: ['22.x']
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      #- uses: actions/setup-node@v4
      #  with:
      #    node-version: ${{ matrix.node-version }}
      #- run: npm ci
      #- run: npm run build --if-present
      - name: "Install 7zip"
        run: choco install 7zip.install
      # https://community.chocolatey.org/packages?q=Excel
      - name: "Installing Office 365 takes about 5 minutes..."
        run: choco install office365proplus -y
      #- name: "Run node script (zip extraction)"
      #  run: node ./zip.js
      # We need to zip the content of the follder src/XMLsource (it contains files and folders with subfolders)
      - name: "Run PowerShell script (zip creation, enable VBOM and import VBA)"
        shell: pwsh
        run: | 
          Write-Host "Current directory: $(pwd)"
          Write-Host "Changing zip file name and location"
          . ./Zip-It.ps1
          Write-Host "========================="
          Write-Host "Closing Office applications"
          . ./Close-Office.ps1
          Write-Host "========================="
          Write-Host "Enabling VBOM (Visual Basic for Applications Object Model)"
          . ./Enable-VBOM.ps1
          Write-Host "========================="
          Write-Host "Importing VBA code"
          . ./Build-VBA.ps1
      - name: Push content
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          
          git add -v . || true
          
          git status
          if [ -n "$(git diff --cached --exit-code)" ]; then
            echo "Changes detected"
            commit_message=$(printf "File creation\n\nGitHub Action: %s/%s/actions/runs/%s" "${{ github.server_url }}" "${{ github.repository }}" "${{ github.run_id }}")
            git commit -m "$commit_message"        
            git push --set-upstream origin $branch_name
          else
            echo "No changes to commit"
          fi
        shell: bash
